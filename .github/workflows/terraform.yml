# Runs the terraform commands for all pull requests, and pushes to main and the initial test branch :)
name: 'Terraform'

on:
  push:
    branches: [ "main", "sean/aws_hosting" ]
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Configure AWS credentials from AWS account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}
        role-session-name: Github-OIDC-TERRAFORM
        audience: sts.amazonaws.com

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./terraform/main
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: ./terraform/main
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      working-directory: ./terraform/main
      run: terraform plan -input=false

    # Run on push to main or aws_hosting
    - name: Terraform Apply
      working-directory: ./terraform/main
      if: github.ref == 'refs/heads/"main"' || github.ref == 'refs/heads/"sean/aws_hosting"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
