<templates>
<body id="congrats"><div  class="flex-container flex-column flex-justify-space-between"><nav><img  id="top-left-image" width="150px" height="150px" src="../img/grumpyPurp_spider.png" alt="Top Left Image"/><a  href="#"><button  id="back-to-home">BACK TO HOME</button></a></nav><main  id="congrats-page"><h1>Congrats!</h1><p>You found your soulmate!!</p><p>Here is their personal information so you can find them:</p><p>Email Address: <strong><span  id="email">example@example.com</span></strong></p></main><footer></footer></div></body>
<body id="dating-info"><header><h2>just a few more questions!</h2></header><main  id="dating-info" class="flex-container flex-column flex-center-column"><div  id="alex-pic"><img  width="350px" height="350px" src="../img/alex_pic.png"/><div><p><strong>Alexander Kruger</strong></p><p>Junior Software Engineer, Trusted Advisor, Just A Great Guy</p></div></div><p>We searched for a person who'd have the ability to determine 8 questions whose answers would help one find their soulmate. BBD's Alexander Kruger was the man for this job! He specially curated these intensive, mind opening &amp; soul searching questions just for SpideySpeedDating. Are you ready to dive deeper into yourself and find your one true love?</p></main><footer><a  href="#"><button>BACK TO HOME</button></a><a  href="#question"><button>let's hear your answers!</button></a></footer></body>
<body id="dating-screen"><header><h2>Round <span  id="round-id">1</span>:</h2></header><main  id="dating-page" class="flex-container flex-column"><span  id="dating-question" class="question-box">Why did my HTML not load correctly?
    </span><span  id="answer-bubble" class="question-box">Hello :)
    </span><div  id="spider-container"><button  id="spider-1" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-2" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-3" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-4" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-5" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-6" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-7" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button><button  id="spider-8" class="spider-button" onclick="EatBug(this.id)" onmouseover="SetSpiderAnswer(this.id)" onmouseout="HideAnswer()"><img  width="100px" height="100px" src="../img/greyGreen_spider.png"/></button></div></main><script>let questions = [
          {
              "question_id": 1,
              "question": "Were you breastfed as a child?"
          },
          {
              "question_id": 2,
              "question": "What type of bear is best?"
          },
          {
              "question_id": 3,
              "question": "Describe your perfect avocado?"
          },
          {
              "question_id": 4,
              "question": "What is your opinion on the following statement: Butter is food lotion"
          },
          {
              "question_id": 5,
              "question": "How did Bruno Mars know her eyes were open, unless his were too?"
          },
          {
              "question_id": 6,
              "question": "Do you agree with the following statement: Male spiders can be romantic"
          },
          {
              "question_id": 7,
              "question": "If you were stuck on a deserted island, and you could only write one Javascript program to keep you busy, how would you kill yourself?"
          },
          {
              "question_id": 8,
              "question": "Would you rather be stuck on an island with a male spider or a bear spider?"
          }
      ];
    let userAnswers;
    let questionNumber = 0;

    const requestOptions = {
      method: 'GET',
      headers: {
        'Authorization': ''
      }
    };

    function EatBug(clickedId) {
      if(questionNumber === 7){
        const buttonNumber = clickedId.split("-")[1];
        
        var answerElement = document.getElementById("answer-bubble");
        // This should display on the ending screen
        // answerElement.textContent = "You found: " + userAnswers[buttonNumber].email;
        answerElement.textContent = "You found: test@user.com";
      }

      var element = document.getElementById(clickedId);
      console.log("You clicked on", clickedId);
      element.style.setProperty("display", "none");

      questionNumber += 1;
    }

    function SetSpiderAnswer(spiderId){
      const buttonNumber = spiderId.split("-")[1];
      let spidersAnswer = userAnswers[buttonNumber].answers[questionNumber];
      var answerElement = document.getElementById("answer-bubble");
      answerElement.textContent = spidersAnswer;
    }

    function HideAnswer(){
      var answerElement = document.getElementById("answer-bubble");
      answerElement.textContent = "";
    }

    function GetQuestions(){
      fetch('http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/api/questions', requestOptions)
      .then(response =&gt; {
        if (!response.ok) {
          throw new Error(response);
        }

        return response.json();
      })
      .then(responseBody =&gt; {
        questions = responseBody;
      })
      .catch(error =&gt; {
        console.error('There was a problem with the fetch operation:', error);
      });
    }

    function GetUserAnswers(){
      fetch('http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/api/answers/random', requestOptions)
      .then(response =&gt; {
        if (!response.ok) {
          throw new Error(response);
        }

        return response.json();
      })
      .then(responseBody =&gt; {
        userAnswers = responseBody;
      })
      .catch(error =&gt; {
        console.error('There was a problem with the fetch operation:', error);
      });
    }

    function initialize(){
      // Load the first question
      questionDisplay = document.getElementById("dating-question");
      questionDisplay.textContent = questions[questionNumber].question;
    }

    initialize();
  </script><footer><button>BACK TO HOME</button></footer></body>
<body id="default-404"><h1>Default-404! (whoopsie daisyüï∏Ô∏è)</h1></body>
<body id="index"><div  class="flex-container flex-column flex-justify-space-between"><nav><img  id="logo" src="img/logo.png" width="115" height="102"/><div  class="links"><a  href="#login" id="github-login">Login with GitHub</a></div></nav><main  id="home-page"><h1>Welcome to Spidey Spee<span  class="hanging-spider">d</span>Dating!</h1></main><footer><a  href="#info">Not sure how it works? Click here!</a><a  href="#intro-questions"><button>next page</button></a></footer></div><script>function navigateToGithubLogin(event) {
      event.preventDefault();
      console.log("hi");
      window.location.href = "https://github.com/login/oauth/authorize?client_id=Ov23li96pnWfFYn2p8gE&amp;redirect_uri=http://localhost:3000/#login";
    }

    let github_login = document.getElementById("github-login");
    console.log(github_login);
    github_login.addEventListener('click', navigateToGithubLogin);
  </script></body>
<body id="info"><header><h2>Welcome to our dating platform!</h2></header><main  id="info-page" class="flex-container flex-column flex-center-column"><p>Here's a quick guide on how everything works:</p><ol><li>Create Your Profile: First things first, set up your profile! Tell us about yourself, and answer some fun questions. Once you're done, hit that "Create Profile" button.</li><li>Get Ready to Date: Once your profile is set, you're ready to dive into the dating world! Click on the "Start Dating" button to begin.</li><li>Meet the "Insects": In the dating game, you'll find yourself in a web with other users represented as insects. Don't worry, it's all in good fun! Each "round" will present a question, and you'll see the answers from the other users.</li><li>Navigate the Web: The spider, that's you, will eliminate one insect at a time based on their answers. It's kind of like a game of elimination! üï∑Ô∏è Bye-bye bugs!</li><li>Find Your Match: As the rounds progress, users will be eliminated until there's only one left standing. The spider, that's still you, will then get the remaining user's info, like email address.</li></ol><p>And that's it! It's a fun way to meet new people and see who you vibe with. So go ahead, give it a try and see who you catch in your web! üï∏Ô∏è</p></main><footer><a  href="#"><button>BACK TO HOME</button></a></footer></body>
<body id="intro-questions"><header><h2>Tell us about yourself!</h2></header><main  id="intro-questions"><form  id="intro-questions-form"><span  id="users-name-box"><label  for="users-name">What's your name?</label><input  id="users-name"/></span><span  id="users-age-box"><label  for="users-age">How old are you?</label><input  id="users-age" type="number"/></span><span  id="users-gender-box"><label  for="users-gender">How do you identify your gender?</label><input  id="users-gender"/></span><span  id="users-orientation-box"><label  for="users-orientation">What's your sexual orientation?</label><input  id="users-orientation"/></span><button  type="submit">Submit</button></form></main><script>function submitForm(e) {

      usersName = document.getElementById("users-name").value;
      usersAge = document.getElementById("users-age").value;
      usersGender = document.getElementById("users-gender").value;
      usersOrientation = document.getElementById("users-orientation").value;

      let options = {
        method: "POST",
        body: {
            "username": usersName,
            "gender": usersGender,
            "sexuality": usersOrientation,
            "age": usersAge
        }
      }
      window.location.href = "#dating-info";
    }
    
    form = document.getElementById("intro-questions-form");
    form.addEventListener('submit', submitForm);
  </script></body>
<body id="login"><h1>Login Page!</h1><a  href="#"><button  id="back-to-home">Back to Home</button></a><script>console.log("loaded");
    const urlParams = new URLSearchParams(window.location.search);
    const code = urlParams.get("code");
    options = {
        headers: {
            "Access-Control-Allow-Origin": window.location.origin
        }
    }

    fetch("http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/api/status", options)
        .then(response =&gt; {
            console.log(response);
        })
        .catch(error =&gt; console.error("Error fetching API:", error));
        
    authOptions = {
        headers: {
            "Access-Control-Allow-Origin": window.location.origin,
            "Authorization" : "Bearer " + code
        }
    }

    console.log("fetching");
    fetch("http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/auth", authOptions)
        .then(response =&gt; {
            console.log(response);
            response.json().then((data) =&gt; {
                localStorage.setItem("jwt", data["accessToken"]);
                window.location.search = "";
                window.location.hash = "";
            }).catch(() =&gt; {
                console.log("Couldn't parse the JSON");
            });
        })
        .catch(error =&gt; console.error("Error fetching API:", error));

    backToHome = document.getElementById("back-to-home");
    backToHome.addEventListener('click', () =&gt; {
        window.location.search = "";
        window.location.hash = "";
    })
</script></body>
<body id="question"><header><h2>Question <span  id="question-id">1</span>:</h2></header><main  id="question-page" class="flex-container flex-column flex-justify-center"><form  id="question-form" class="flex-container flex-column flex-justify-center"><label  id="question-label" for="question-id">Were you breastfed as a child?</label><textarea  id="question-input" maxlength="150"> </textarea><button  id="question-form-button" type="submit">Next Question</button></form></main><footer><a  href="#"><button>BACK TO HOME</button></a><button  id="question-footer-button">NEXT QUESTION</button></footer><script>function resizeTextArea() {
      textarea = document.getElementById("question-input");
      textarea.style.height = "";
      textarea.style.height = textarea.scrollHeight + 2 + "px";
    }
    async function getQuestions() {
      if (window.questions === undefined || window.questions === null) {
        // Should be global for moving back
        window.questions = await fetch("http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/api/questions").then((response)=&gt;{response.json()});
        window.currQuestionIdx = 0;
      }
      renderCurrentQuestion();
    }
    async function updateToNextQuestion(e) {
      e.preventDefault();
      let answer = textarea.value;
      if (answer === "" || answer === undefined) return;
      await postAnswer(answer);
      window.answer = answer;
      updateQuestion();
    }
    function updateQuestion(answer) {
      if (window.currQuestionIdx &lt; window.questions.length) {
        currQuestionIdx += 1;
        renderCurrentQuestion();
      } else {
        window.location.href = "#dating-screen";
      }
    }
    function renderCurrentQuestion() {
      questionId.textContent = window.currQuestionIdx + 1;
      questionLabel.textContent = window.questions[window.currQuestionIdx].question;
      textarea.value = "";
    }
    async function postAnswer(answer) {
      await fetch("http://ec2-3-252-74-206.eu-west-1.compute.amazonaws.com:5000/api/answers/create", {
        method: "POST",
        body: JSON.stringify({
          question_id: window.questions[window.currQuestionIdx],
          answer: answer
        }),
        headers: {
          "Content-type": "application/json; charset=UTF-8"
        }
      }).then(() =&gt; {wondow.answer = answer});
    }
    textarea = document.getElementById("question-input");
    textarea.addEventListener("input", resizeTextArea);
    window.addEventListener("resize", resizeTextArea);
    
    questionId = document.getElementById("question-id");
    
    form = document.getElementById("question-form");
    form.addEventListener("submit", updateToNextQuestion);
    
    nextButton = document.getElementById("question-footer-button");
    nextButton.addEventListener("click", updateToNextQuestion)

    questionLabel = document.getElementById("question-label");
    getQuestions()

  </script></body>
</templates>